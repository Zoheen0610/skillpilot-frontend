{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zoheen\\\\Desktop\\\\projects\\\\webdev\\\\careerpredictor - Copy\\\\frontend\\\\src\\\\components\\\\JobInsights.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COMPANY_LOGOS = {\n  \"Infosys\": \"https://upload.wikimedia.org/wikipedia/commons/9/95/Infosys_logo.svg\",\n  \"Wipro\": \"https://upload.wikimedia.org/wikipedia/commons/1/1c/Wipro_Logo.svg\",\n  \"Cognizant\": \"https://upload.wikimedia.org/wikipedia/commons/4/4b/Cognizant_logo_2022.svg\",\n  \"ThoughtWorks\": \"https://upload.wikimedia.org/wikipedia/commons/9/9c/ThoughtWorks_logo.svg\",\n  \"Zoho\": \"https://upload.wikimedia.org/wikipedia/commons/4/4c/Zoho_Corporation_logo.svg\",\n  \"Razorpay\": \"https://upload.wikimedia.org/wikipedia/commons/3/3c/Razorpay_logo.svg\",\n  \"Freshworks\": \"https://upload.wikimedia.org/wikipedia/commons/2/2c/Freshworks_logo.svg\",\n  \"Palo Alto Networks\": \"https://upload.wikimedia.org/wikipedia/commons/3/3c/Palo_Alto_Networks_logo.svg\",\n  \"Cisco\": \"https://upload.wikimedia.org/wikipedia/commons/0/08/Cisco_logo.svg\",\n  \"IBM\": \"https://upload.wikimedia.org/wikipedia/commons/5/51/IBM_logo.svg\",\n  \"Check Point\": \"https://upload.wikimedia.org/wikipedia/commons/4/4c/Check_Point_Software_Technologies_logo.svg\",\n  \"Kaspersky\": \"https://upload.wikimedia.org/wikipedia/commons/2/2c/Kaspersky_Lab_logo.svg\",\n  \"Deloitte\": \"https://upload.wikimedia.org/wikipedia/commons/1/15/Deloitte_Logo.svg\",\n  \"EY\": \"https://upload.wikimedia.org/wikipedia/commons/2/2c/EY_logo.svg\",\n  \"Accenture\": \"https://upload.wikimedia.org/wikipedia/commons/c/cd/Accenture.svg\",\n  \"Microsoft\": \"https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg\",\n  \"Google\": \"https://upload.wikimedia.org/wikipedia/commons/2/2f/Google_2015_logo.svg\",\n  \"Amazon\": \"https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg\",\n  \"Meta\": \"https://upload.wikimedia.org/wikipedia/commons/7/7b/Meta_Platforms_Inc._logo.svg\",\n  \"Apple\": \"https://upload.wikimedia.org/wikipedia/commons/f/fa/Apple_logo_black.svg\",\n  \"KPMG\": \"https://upload.wikimedia.org/wikipedia/commons/3/3c/KPMG_logo.svg\",\n  \"TCS\": \"https://upload.wikimedia.org/wikipedia/commons/9/96/Tata_Consultancy_Services_Logo.svg\",\n  \"Mu Sigma\": \"https://upload.wikimedia.org/wikipedia/commons/8/8c/Mu_Sigma_logo.svg\",\n  \"ZS Associates\": \"https://upload.wikimedia.org/wikipedia/commons/2/2c/ZS_Associates_logo.svg\"\n};\nconst JobInsights = ({\n  insights\n}) => {\n  if (!insights) return null;\n  const getDemandColor = demand => {\n    switch (demand.toLowerCase()) {\n      case \"high\":\n        return \"text-green-600\";\n      case \"moderate\":\n        return \"text-yellow-600\";\n      case \"low\":\n        return \"text-red-600\";\n      default:\n        return \"text-gray-600\";\n    }\n  };\n  const getGrowthColor = growth => {\n    if (growth.toLowerCase().includes(\"rapidly\") || growth.toLowerCase().includes(\"explosive\")) {\n      return \"text-green-600\";\n    } else if (growth.toLowerCase().includes(\"steady\")) {\n      return \"text-yellow-600\";\n    } else {\n      return \"text-gray-600\";\n    }\n  };\n  const getCompanyLogo = companyName => {\n    // Remove any suffixes like \"Security\" from company names\n    const normalizedName = companyName.split(\" \")[0];\n\n    // Try exact match first\n    if (COMPANY_LOGOS[companyName]) {\n      console.log(`Found exact match for ${companyName}`);\n      return COMPANY_LOGOS[companyName];\n    }\n\n    // Try normalized name\n    if (COMPANY_LOGOS[normalizedName]) {\n      console.log(`Found normalized match for ${companyName} -> ${normalizedName}`);\n      return COMPANY_LOGOS[normalizedName];\n    }\n\n    // Try case-insensitive match\n    const lowerCompanyName = companyName.toLowerCase();\n    for (const [key, value] of Object.entries(COMPANY_LOGOS)) {\n      if (key.toLowerCase() === lowerCompanyName) {\n        console.log(`Found case-insensitive match for ${companyName} -> ${key}`);\n        return value;\n      }\n    }\n    console.log(`No logo found for ${companyName}`);\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-md p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-purple-600 mb-4\",\n      children: \"Job Insights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-50 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-purple-800 mb-2\",\n          children: \"Market Demand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `text-xl font-semibold ${getDemandColor(insights.Demand_in_India)}`,\n          children: insights.Demand_in_India\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-purple-50 p-4 rounded-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-medium text-purple-800 mb-2\",\n          children: \"Growth Trend\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `text-xl font-semibold ${getGrowthColor(insights.Growth_in_India)}`,\n          children: insights.Growth_in_India\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-medium text-purple-800 mb-3\",\n        children: \"Top Hiring Companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4\",\n        children: insights.Top_Companies.split(\", \").map((company, index) => {\n          const logoUrl = getCompanyLogo(company);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white border border-gray-200 rounded-lg p-3 flex items-center justify-center hover:shadow-md transition-shadow\",\n            children: logoUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: logoUrl,\n              alt: `${company} logo`,\n              className: \"h-8 w-auto object-contain\",\n              onError: e => {\n                console.log(`Error loading logo for ${company}:`, e);\n                e.target.onerror = null;\n                e.target.src = \"https://via.placeholder.com/100x30?text=\" + company;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm font-medium text-gray-700\",\n              children: company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_c = JobInsights;\nexport default JobInsights;\nvar _c;\n$RefreshReg$(_c, \"JobInsights\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","COMPANY_LOGOS","JobInsights","insights","getDemandColor","demand","toLowerCase","getGrowthColor","growth","includes","getCompanyLogo","companyName","normalizedName","split","console","log","lowerCompanyName","key","value","Object","entries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Demand_in_India","Growth_in_India","Top_Companies","map","company","index","logoUrl","src","alt","onError","e","target","onerror","_c","$RefreshReg$"],"sources":["C:/Users/Zoheen/Desktop/projects/webdev/careerpredictor - Copy/frontend/src/components/JobInsights.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst COMPANY_LOGOS = {\r\n  \"Infosys\": \"https://upload.wikimedia.org/wikipedia/commons/9/95/Infosys_logo.svg\",\r\n  \"Wipro\": \"https://upload.wikimedia.org/wikipedia/commons/1/1c/Wipro_Logo.svg\",\r\n  \"Cognizant\": \"https://upload.wikimedia.org/wikipedia/commons/4/4b/Cognizant_logo_2022.svg\",\r\n  \"ThoughtWorks\": \"https://upload.wikimedia.org/wikipedia/commons/9/9c/ThoughtWorks_logo.svg\",\r\n  \"Zoho\": \"https://upload.wikimedia.org/wikipedia/commons/4/4c/Zoho_Corporation_logo.svg\",\r\n  \"Razorpay\": \"https://upload.wikimedia.org/wikipedia/commons/3/3c/Razorpay_logo.svg\",\r\n  \"Freshworks\": \"https://upload.wikimedia.org/wikipedia/commons/2/2c/Freshworks_logo.svg\",\r\n  \"Palo Alto Networks\": \"https://upload.wikimedia.org/wikipedia/commons/3/3c/Palo_Alto_Networks_logo.svg\",\r\n  \"Cisco\": \"https://upload.wikimedia.org/wikipedia/commons/0/08/Cisco_logo.svg\",\r\n  \"IBM\": \"https://upload.wikimedia.org/wikipedia/commons/5/51/IBM_logo.svg\",\r\n  \"Check Point\": \"https://upload.wikimedia.org/wikipedia/commons/4/4c/Check_Point_Software_Technologies_logo.svg\",\r\n  \"Kaspersky\": \"https://upload.wikimedia.org/wikipedia/commons/2/2c/Kaspersky_Lab_logo.svg\",\r\n  \"Deloitte\": \"https://upload.wikimedia.org/wikipedia/commons/1/15/Deloitte_Logo.svg\",\r\n  \"EY\": \"https://upload.wikimedia.org/wikipedia/commons/2/2c/EY_logo.svg\",\r\n  \"Accenture\": \"https://upload.wikimedia.org/wikipedia/commons/c/cd/Accenture.svg\",\r\n  \"Microsoft\": \"https://upload.wikimedia.org/wikipedia/commons/4/44/Microsoft_logo.svg\",\r\n  \"Google\": \"https://upload.wikimedia.org/wikipedia/commons/2/2f/Google_2015_logo.svg\",\r\n  \"Amazon\": \"https://upload.wikimedia.org/wikipedia/commons/a/a9/Amazon_logo.svg\",\r\n  \"Meta\": \"https://upload.wikimedia.org/wikipedia/commons/7/7b/Meta_Platforms_Inc._logo.svg\",\r\n  \"Apple\": \"https://upload.wikimedia.org/wikipedia/commons/f/fa/Apple_logo_black.svg\",\r\n  \"KPMG\": \"https://upload.wikimedia.org/wikipedia/commons/3/3c/KPMG_logo.svg\",\r\n  \"TCS\": \"https://upload.wikimedia.org/wikipedia/commons/9/96/Tata_Consultancy_Services_Logo.svg\",\r\n  \"Mu Sigma\": \"https://upload.wikimedia.org/wikipedia/commons/8/8c/Mu_Sigma_logo.svg\",\r\n  \"ZS Associates\": \"https://upload.wikimedia.org/wikipedia/commons/2/2c/ZS_Associates_logo.svg\"\r\n};\r\n\r\nconst JobInsights = ({ insights }) => {\r\n  if (!insights) return null;\r\n\r\n  const getDemandColor = (demand) => {\r\n    switch (demand.toLowerCase()) {\r\n      case \"high\":\r\n        return \"text-green-600\";\r\n      case \"moderate\":\r\n        return \"text-yellow-600\";\r\n      case \"low\":\r\n        return \"text-red-600\";\r\n      default:\r\n        return \"text-gray-600\";\r\n    }\r\n  };\r\n\r\n  const getGrowthColor = (growth) => {\r\n    if (\r\n      growth.toLowerCase().includes(\"rapidly\") ||\r\n      growth.toLowerCase().includes(\"explosive\")\r\n    ) {\r\n      return \"text-green-600\";\r\n    } else if (growth.toLowerCase().includes(\"steady\")) {\r\n      return \"text-yellow-600\";\r\n    } else {\r\n      return \"text-gray-600\";\r\n    }\r\n  };\r\n\r\n  const getCompanyLogo = (companyName) => {\r\n    // Remove any suffixes like \"Security\" from company names\r\n    const normalizedName = companyName.split(\" \")[0];\r\n    \r\n    // Try exact match first\r\n    if (COMPANY_LOGOS[companyName]) {\r\n      console.log(`Found exact match for ${companyName}`);\r\n      return COMPANY_LOGOS[companyName];\r\n    }\r\n    \r\n    // Try normalized name\r\n    if (COMPANY_LOGOS[normalizedName]) {\r\n      console.log(`Found normalized match for ${companyName} -> ${normalizedName}`);\r\n      return COMPANY_LOGOS[normalizedName];\r\n    }\r\n    \r\n    // Try case-insensitive match\r\n    const lowerCompanyName = companyName.toLowerCase();\r\n    for (const [key, value] of Object.entries(COMPANY_LOGOS)) {\r\n      if (key.toLowerCase() === lowerCompanyName) {\r\n        console.log(`Found case-insensitive match for ${companyName} -> ${key}`);\r\n        return value;\r\n      }\r\n    }\r\n    \r\n    console.log(`No logo found for ${companyName}`);\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n      <h2 className=\"text-2xl font-bold text-purple-600 mb-4\">Job Insights</h2>\r\n\r\n      {/* Demand and Growth */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\r\n        <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n          <h3 className=\"text-lg font-medium text-purple-800 mb-2\">\r\n            Market Demand\r\n          </h3>\r\n          <p\r\n            className={`text-xl font-semibold ${getDemandColor(\r\n              insights.Demand_in_India\r\n            )}`}\r\n          >\r\n            {insights.Demand_in_India}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"bg-purple-50 p-4 rounded-lg\">\r\n          <h3 className=\"text-lg font-medium text-purple-800 mb-2\">\r\n            Growth Trend\r\n          </h3>\r\n          <p\r\n            className={`text-xl font-semibold ${getGrowthColor(\r\n              insights.Growth_in_India\r\n            )}`}\r\n          >\r\n            {insights.Growth_in_India}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Top Companies */}\r\n      <div>\r\n        <h3 className=\"text-lg font-medium text-purple-800 mb-3\">\r\n          Top Hiring Companies\r\n        </h3>\r\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4\">\r\n          {insights.Top_Companies.split(\", \").map((company, index) => {\r\n            const logoUrl = getCompanyLogo(company);\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\"bg-white border border-gray-200 rounded-lg p-3 flex items-center justify-center hover:shadow-md transition-shadow\"\r\n              >\r\n                {logoUrl ? (\r\n                  <img\r\n                    src={logoUrl}\r\n                    alt={`${company} logo`}\r\n                    className=\"h-8 w-auto object-contain\"\r\n                    onError={(e) => {\r\n                      console.log(`Error loading logo for ${company}:`, e);\r\n                      e.target.onerror = null;\r\n                      e.target.src = \"https://via.placeholder.com/100x30?text=\" + company;\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <span className=\"text-sm font-medium text-gray-700\">\r\n                    {company}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobInsights;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}