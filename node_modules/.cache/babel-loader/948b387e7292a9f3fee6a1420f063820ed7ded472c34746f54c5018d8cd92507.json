{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zoheen\\\\Desktop\\\\projects\\\\webdev\\\\SkillPilot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport CareerPredictionPage from \"./components/CareerPredictionPage\";\nimport ResumeToolsPage from \"./components/ResumeToolsPage\";\nimport Navbar from \"./components/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [careerData, setCareerData] = useState(null);\n  const handlePredict = async (skills, interests) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"http://localhost:8000/predict\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          skills,\n          interests\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to get prediction\");\n      }\n      const data = await response.json();\n      setCareerData(data);\n    } catch (err) {\n      setError(err.message); //failed to fetch\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/career-predictor\",\n          element: /*#__PURE__*/_jsxDEV(CareerPredictionPage, {\n            onPredict: handlePredict,\n            loading: loading,\n            error: error,\n            careerData: careerData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/resume-tools\",\n          element: /*#__PURE__*/_jsxDEV(ResumeToolsPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fS+0+WVE17woAggEHs5owGnhxow=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","HomePage","CareerPredictionPage","ResumeToolsPage","Navbar","jsxDEV","_jsxDEV","App","_s","loading","setLoading","error","setError","careerData","setCareerData","handlePredict","skills","interests","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","err","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onPredict","_c","$RefreshReg$"],"sources":["C:/Users/Zoheen/Desktop/projects/webdev/SkillPilot/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport HomePage from \"./components/HomePage\";\nimport CareerPredictionPage from \"./components/CareerPredictionPage\";\nimport ResumeToolsPage from \"./components/ResumeToolsPage\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [careerData, setCareerData] = useState(null);\n\n  const handlePredict = async (skills, interests) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"http://localhost:8000/predict\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ skills, interests }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to get prediction\");\n      }\n\n      const data = await response.json();\n      setCareerData(data);\n    } catch (err) {\n      setError(err.message); //failed to fetch\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Router>\n      <div className=\"min-h-screen bg-gray-50\">\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route\n            path=\"/career-predictor\"\n            element={\n              <CareerPredictionPage\n                onPredict={handlePredict}\n                loading={loading}\n                error={error}\n                careerData={careerData}\n              />\n            }\n          />\n          <Route path=\"/resume-tools\" element={<ResumeToolsPage />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}